c
@questions
query
c
cc
c
@questions[2]
@questions[1]
@questions
@user
c
@questions
@user
c
p.original_filename
p.original_name
p.filename
p=params["profile_picture"]
params["profile_picture"].filename
params["profile_picture"]
params["profile_picture"]["filename"]
filename
@original_filename
original_filename
params["profile_picture"]
params["profile_picture]
params
c
p.read?
p.read
p=params["profile_picture"]
c
p.public_methods
p.read
p.public_methods
p=params["profile_picture"]
p=params["profile_update"]
p
c
plain:params["profile_picture"].inspect
plain:params["profile_picture"]
plain:params[:article].inspect
plain: params[:article].inspect
p["picture"]
p.to_s
p.display
p.encoding
p.to_json
p.public_methods
p.open
p=params["profile_picture"]
p=params["profile_update"]
params
c
p[1]
p[9]
p.*
p.truncate
p.to_c
p
p.scan
p.san
p.to_s
p.public_methods
p.methods
p.public
p.wite
p.open
poen
debug(p)
p.inspect
p=params["profile_picture"]
params.debugger
debugger(params)
debugger
debuger(params)
debug(params)
p.open
p
p.read
p=params["profile_picture"]
params["profile_picture"][:picture]
params["profile_picture"]
parama["profile_picture"]
params
c
followed=Question.find_by_id(id).question_followers_mappings.where(user_id:session[:user_id].to_i).first
id
followed
followes
c
followed
c
followed
id
followed
followed=Question.find_by_id(id)
followed=Question.find_by_id(id).question_followers_mappings.where(user_id:session[:user_id].to_i).first
c
followed
c
id
c
id
is
c
id
c
@related_questions
c
related_questions
query
c
question_part
c
@question[1]
@question[0]
@question.questions
@question
@question.questions
@question.question
@questionquestion
@questionquestions
@question
@auestion
id
c
question
question.question_followers_mappings.length
question.question_followers_mappings
question.question_followers_mappingd
question
c
question.answers.first
question.answers
question
c
params[:id].to_i
params[:id]
params[:id[
c
params[:id]
c
params[:id]
c
params
paramas
paramas[id]
id
c
idc
id
c
id
c
params
params[:id]
c
 c
params[:id]
params
params[:id]
params
params[]
params
parama
parama[]
c
@questions[3]
@questions[1]
ids
@questions[0]
@questions
c
@questions[0]
@questions[1]
@questions
c
ids
c
ids
c
ids
c
ids
@user
session[:user_id]
c
session[:user_id]
session[user_id]
@user
c
@user
c
@user
c
@user
session[:user_id]
c
session[user_id]
@user.id
@user.followees
@user.followeegh
@user.followees
@user
ids
c
ids
session[user_id]
ids
c
ids
c
ids
c
@questions.question_followers_mappings
@question.QuestionFollowersMappings
@questions[1].question_followers_mappings
@questions[1].questions_followers_mappings
@questions
@questions=Question.all
c
@question.QuestionFollowersMappings
@question.QuestionFollowersMapping
@question.question_followers_mappings
@questions=Question.all
@question
c
@question.question_followers_mappings
@question.question_followers_mapping
@question
@questions.
@question
@questions=Question.all
c
questions
questions.Ques
questions.public_methods
questions.ques
questions.methods
questions.public()
questions.?
questions.
questions
questions.question_followers_mappings
questions.followers
questions=Question.all
clear
c
@questions
c
@questions
c
@questions
c
question_destroy_followers.destroy
